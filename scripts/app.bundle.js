!function(n){var t={};function i(e){if(t[e])return t[e].exports;var s=t[e]={i:e,l:!1,exports:{}};return n[e].call(s.exports,s,s.exports,i),s.l=!0,s.exports}i.m=n,i.c=t,i.d=function(n,t,e){i.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:e})},i.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},i.t=function(n,t){if(1&t&&(n=i(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var e=Object.create(null);if(i.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var s in n)i.d(e,s,function(t){return n[t]}.bind(null,s));return e},i.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return i.d(t,"a",t),t},i.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},i.p="",i(i.s=0)}([function(n,t,i){"use strict";i.r(t);var e=new Vuex.Store({state:{typeList:[{type:"radio",chinese:"單選題",class:"far fa-dot-circle"},{type:"checkbox",chinese:"複選題",class:"far fa-check-square"},{type:"dropdown",chinese:"下拉選單",class:"far fa-caret-square-down"},{type:"literal",chinese:"簡答",class:"fas fa-align-left"},{type:"date",chinese:"日期",class:"far fa-calendar-alt"},{type:"number",chinese:"數字",class:"fas fa-sort-numeric-up-alt"},{type:"email",chinese:"信箱",class:"far fa-envelope"},{type:"english",chinese:"英文",class:"fas fa-font"}],form:{},currentQuestion:{},currentOption:{},dialogStatus:!1},mutations:{createFormData:function(n,t){n.form=t},switchDialog:function(n,t){n.currentQuestion=t?t.question:{},n.currentOption=t?t.option:{},n.dialogStatus=!n.dialogStatus},changeBinding:function(n,t){n.currentOption.Binding=t}}});Vue.component("Title",{props:{form:Object},template:'\n    <div class="title-c">\n      <div class="line"></div>\n\n      <div class="title-container">\n        <input type="text" v-model="form.Title" placeholder="標題">\n        <span class="bar"></span>\n      </div>\n\n      <div class="description-container">\n        <input type="text" v-model="form.Description" placeholder="請輸入說明內容">\n        <span class="bar"></span>\n      </div>\n\n      <div class="switch-area">\n        <p>計分模式</p>\n        <input\n          :id="form.Guid"\n          type="checkbox"\n          class="offscreen"\n          v-model="form.ScoreEnable"\n        />\n        <label :for="form.Guid" class="switch"></label>\n      </div>\n    </div>\n  '}),Vue.component("Question",{props:{question:Object,index:Number},template:'\n    <div class="question">\n      <div class="banana-container">\n        <small>題組 {{ index + 1 }}</small>\n        <i v-if="被綁定囉呵呵" class="fas fa-link"></i>\n      </div>\n\n      <div class="question-title-container">\n        <input type="text" v-model="question.Title" placeholder="問題">\n        <span class="bar"></span>\n      </div>\n\n      <div class="type-container">\n        <p>類型</p>\n\n        <div class="current-type" v-if="!typeStatus" @click="up">\n          <i :class="currentType.class"></i>\n          <p>{{ currentType.chinese }}</p>\n          <i class="fas fa-sort-down"></i>\n        </div>\n\n        <div class="type-list" v-else>\n          <div class="type" :class="item.type" v-for="(item, index) in typeList" :key="index" @click="down(item)">\n            <i :class="item.class"></i>\n            <p>{{ item.chinese }}</p>\n          </div>\n        </div>\n      </div>\n\n      <div class="options">\n        <div v-if="question.Type === \'radio\' || question.Type === \'checkbox\' || question.Type === \'dropdown\'">\n          <div class="option" v-for="(option, index) in question.Options" :key="index">\n            <i :class="currentType.class"></i>\n            <div class="shit">\n              <input type="text" v-model="option.Value" :data-key="option.Guid">\n              <span class="bar"></span>\n            </div>\n            <div class="fuck" v-if="form.ScoreEnable">\n              <input type="text" v-model="option.Score" @keyup="limitNumber" placeholder="輸入分數">\n              <span class="bar"></span>\n            </div>\n            <div class="del-container">\n              <small>刪除選項</small>\n              <i class="fas fa-times" @click="delOption(index)"></i>\n            </div>\n            <div class="binding-container" v-if="question.Type !== \'dropdown\'">\n              <small>串聯題組</small>\n              <i v-if="option.Binding.length > 0" class="fas fa-link light" @click="switchDialog(option)"></i>\n              <i v-else class="fas fa-link" @click="switchDialog(option)"></i>\n            </div>\n          </div>\n        </div>\n\n        <div class="option" v-else>\n          <i :class="currentType.class"></i>\n          <p>{{ currentType.chinese }}</p>\n        </div>\n\n        <div class="option" v-if="question.Type === \'radio\' || question.Type === \'checkbox\' || question.Type === \'dropdown\'">\n          <i :class="currentType.class"></i>\n          <div class="shit">\n            <input type="text" placeholder="新增選項" @click="addNewOption">\n            <span class="bar"></span>\n          </div>\n        </div>\n      </div>\n\n      <div class="footer">\n        <div class="switch-area">\n          <p>本題組為必填</p>\n          <input\n            :id="question.Guid"\n            type="checkbox"\n            class="offscreen"\n            v-model="question.Required"\n          />\n          <label :for="question.Guid" class="switch"></label>\n        </div>\n        <div class="line"></div>\n        <div class="delete-area">\n          <i class="fas fa-trash" @click="delQuestion"></i>  \n          <p @click="delQuestion">刪除此題組</p>\n        </div>\n      </div>\n    </div>\n  ',data:function(){return{typeStatus:!1}},computed:{form:function(){return e.state.form},typeList:function(){return e.state.typeList},currentType:{get:function(){var n=this;return this.typeList.find((function(t){return t.type===n.question.Type}))},set:function(n){"radio"!==n&&"checkbox"!==n&&"dropdown"!==n&&(this.question.Options.splice(1,this.question.Options.length-1),this.question.Options[0].Binding=[]),this.question.Type=n}},"被綁定囉呵呵":function(){var n=this,t=!1;return this.form.Questions.forEach((function(i){i.Options.forEach((function(i){i.Binding.forEach((function(i){i===n.question.Guid&&(t=!0)}))}))})),t}},methods:{up:function(){this.typeStatus=!0},down:function(n){this.typeStatus=!1,this.currentType=n.type,"radio"!==this.currentType.type&&"checkbox"!==this.currentType.type&&"dropdown"!=this.currentType.type?this.question.Options[0].Value="":this.question.Options[0].Value="選項 1"},addNewOption:function(){var n=this.$root.getGuid();this.question.Options.push({Guid:n,Value:"選項 ".concat(this.question.Options.length+1),Binding:[],Score:0}),Vue.nextTick((function(){var t=document.querySelector('input[data-key="'.concat(n,'"]'));t.focus(),t.select()}))},delOption:function(n){this.question.Options.splice(n,1)},delQuestion:function(){var n=this;this.form.Questions.forEach((function(t){t.Options.forEach((function(t){t.Binding.forEach((function(t,i,e){t===n.question.Guid&&e.splice(i,1)}))}))})),this.form.Questions.splice(this.index,1)},switchDialog:function(n){var t=this.question;e.commit("switchDialog",{question:t,option:n})},limitNumber:function(n){n.target.value=n.target.value.replace(/[^\d]/g,"")}},mounted:function(){var n=this;window.addEventListener("click",(function(t){var i=document.querySelector(".type-list");t.target!==i&&(n.typeStatus=!1)}))}}),Vue.component("Dialog",{template:'\n    <div class="mask">\n      <div class="dialog">\n        <p>串連題組</p>\n        <p>該選項將與以下題組串連：</p>\n        <v-select v-model="selected" label="title" :options="options" :reduce="title => title.guid" multiple></v-select>\n        <div class="btn-container">\n          <div class="btn-cancel" @click="cancel">\n            <span>取消</span>\n          </div>\n          <div class="btn-save" @click="save">\n            <span>儲存</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  ',data:function(){return{selected:[]}},computed:{options:function(){var n=this,t=[];return this.form.Questions.forEach((function(i,e){i.Guid!==n.cQuestion.Guid&&t.push({title:"題組 ".concat(e+1),guid:i.Guid})})),t},form:function(){return e.state.form},cQuestion:function(){return e.state.currentQuestion},cOption:function(){return e.state.currentOption}},methods:{save:function(){e.commit("changeBinding",this.selected),e.commit("switchDialog")},cancel:function(){e.commit("switchDialog")}},created:function(){var n=this;this.cOption.Binding.length>0&&this.form.Questions.forEach((function(t){n.cOption.Binding.forEach((function(i){t.Guid===i&&n.selected.push(i)}))}))}}),Vue.component("EditModeQues",{props:{question:Object,index:Number},template:'\n    <div class="question">\n      <div>\n        <small>題組 {{ index + 1 }}</small>\n      </div>\n\n      <div class="question-title-container">\n        <input type="text" v-model="question.Title" placeholder="問題">\n        <span class="bar"></span>\n      </div>\n\n      <div class="options">\n        <div v-if="question.Type === \'radio\' || question.Type === \'checkbox\' || question.Type === \'dropdown\'">\n          <div class="option" v-for="(option, index) in question.Options" :key="index">\n            <i :class="currentType.class"></i>\n            <div class="shit">\n              <input type="text" v-model="option.Value">\n              <span class="bar"></span>\n            </div>\n\n            <div class="fuck" v-if="form.ScoreEnable">\n              <input type="text" v-model="option.Score" @keyup="limitNumber" placeholder="輸入分數">\n              <span class="bar"></span>\n            </div>\n          </div>\n        </div>\n\n        <div class="option" v-else>\n          <i :class="currentType.class"></i>\n          <p>{{ currentType.chinese }}</p>\n        </div>\n      </div>\n    </div>\n  ',computed:{form:function(){return e.state.form},typeList:function(){return e.state.typeList},currentType:{get:function(){var n=this;return this.typeList.find((function(t){return t.type===n.question.Type}))},set:function(n){"radio"!==n&&"checkbox"!==n&&"dropdown"!==n&&(this.question.Options.splice(1,this.question.Options.length-1),this.question.Options[0].Binding=[]),this.question.Type=n}}},methods:{limitNumber:function(n){n.target.value=n.target.value.replace(/[^\d]/g,"")}}}),Vue.component("EditModeTitle",{props:{form:Object},template:'\n    <div class="title-c" v-if="JSON.stringify(form) !== \'{}\'">\n      <div class="line"></div>\n\n      <div class="title-container">\n        <input type="text" v-model="form.Title" placeholder="標題">\n        <span class="bar"></span>\n      </div>\n\n      <div class="description-container">\n        <input type="text" v-model="form.Description" placeholder="請輸入說明內容">\n        <span class="bar"></span>\n      </div>\n    </div>\n  '});Vue.component("v-select",VueSelect.VueSelect);Vue.component("CreateForm",{props:{editMode:{type:Boolean,default:!1},backUrl:{type:String,default:""}},template:'\n    <div>\n      <Dialog v-if="dialogStatus"></Dialog>\n      \n      \x3c!-- <div id="header">\n        <p>Jun Form</p>\n      </div> --\x3e\n      \n      <div id="main">\n        <div class="functions">\n          <div class="back" @click="back">\n            <i class="fas fa-arrow-left"></i>\n            <p>返回</p>\n          </div>\n\n          <div class="drag" v-if="!editMode" @click="switchDragStatus">\n            <i class="fas fa-random"></i>\n            <p>拖曳題組</p>\n          </div>\n\n          <div class="confirm" v-if="JSON.stringify(form) !== \'{}\'">\n            <i class="fas fa-check"></i>\n            <p>完成</p>\n          </div>\n        </div>\n\n        <div id="form-editor">\n          <Title v-if="!editMode" :form="form" :editMode="editMode" />\n          <EditModeTitle v-else :form="form" :editMode="editMode" />\n          \n          <div v-if="!dragStatus">\n            <div v-if="!editMode">\n              <Question v-for="(question, index) in form.Questions" :key="question.Guid" :question="question" :index="index" />\n            </div>\n            \n            <div v-else>\n              <EditModeQues v-for="(question, index) in form.Questions" :key="question.Guid" :question="question" :index="index" />\n            </div>\n          </div>\n\n          <draggable v-else v-model="form.Questions" @start="start" @end="end" ghost-class="ghost" v-bind="dragOptions">\n            <transition-group>\n              <div class="drag-container" v-for="(question, index) in form.Questions" :key="question.Guid">\n                題組 {{ index + 1 }} - {{ question.Title }}\n              </div>\n            </transition-group>\n          </draggable>\n        </div>\n\n        <div class="add-new-question" v-if="!editMode" @click="addNewQuestion">\n          <i class="fas fa-times"></i>\n          <p>新增題組</p>\n        </div>\n      </div>\n    </div>\n  ',data:function(){return{dragStatus:!1}},computed:{form:function(){return e.state.form},dialogStatus:function(){return e.state.dialogStatus},dragOptions:function(){return{animation:250,disabled:!1,ghostClass:"ghost",group:"description"}}},methods:{addNewQuestion:function(){this.form.Questions.push({Guid:this.$root.getGuid(),Title:"",Type:"radio",Options:[{Guid:this.$root.getGuid(),Value:"選項 1",Binding:[],Score:0}],Answer:[],Required:!1})},switchDragStatus:function(){this.dragStatus=!this.dragStatus},getFormJSON:function(){return""===this.form.Title?void window.alert("請輸入表單標題"):JSON.stringify(e.state.form)},renderForm:function(n){e.state.form=n},back:function(){""===this.backUrl?window.alert("未正確配置返回頁面"):window.location.href=this.backUrl},start:function(){},end:function(){}},created:function(){if(this.editMode)e.commit("createFormData",{});else{var n={Guid:this.$root.getGuid(),Title:"",Description:"",ScoreEnable:!1,Questions:[{Guid:this.$root.getGuid(),Title:"第一題",Type:"radio",Options:[{Guid:this.$root.getGuid(),Value:"選項 1",Binding:[],Score:0}],Answer:[],Required:!1}]};e.commit("createFormData",n)}},mounted:function(){junForm={getFormJSON:this.getFormJSON,renderForm:this.renderForm}}});var s=Vue.extend({props:{data:Object,index:Number,readOnly:Boolean},template:'\n    <div class="r-question" v-if="display">\n      <div>\n        <p class="question-title">{{ data.Title }}</p>\n        <small v-if="data.Required">*</small>\n      </div>\n\n      <div class="r-option-group">\n        <div class="r-option" v-for="option in data.Options" :key="option.Guid">\n          <input\n            :type="data.Type"\n            :id="option.Guid"\n            :value="option.Guid"\n            v-model="data.Answer"\n            @change="checkBinding(data, option)"\n            :disabled="readOnly"\n          />\n          <label :for="option.Guid">{{ option.Value }}</label>\n        </div>\n      </div>\n    </div>\n  ',data:function(){return{display:!0}},mounted:function(){var n=this;eventBus.$on("connect",(function(t){t.Guid===n.data.Guid&&(n.display=t.status)}))}}),o=(Vue.component("radio",{watch:{display:function(){this.display||(this.data.Answer="",this.data.Options.forEach((function(n){n.Binding.length>0&&n.Binding.forEach((function(n){eventBus.$emit("connect",{Guid:n,status:!1})}))})))}},methods:{checkBinding:function(n,t){t.Binding.length>0&&t.Binding.forEach((function(n){eventBus.$emit("connect",{Guid:n,status:!0})})),n.Options.forEach((function(n){n.Binding.length>0&&n.Guid!==t.Guid&&n.Binding.forEach((function(n){eventBus.$emit("connect",{Guid:n,status:!1})}))}))}},extends:s}),Vue.component("checkbox",{watch:{display:function(){this.display||(this.data.Answer=[],this.data.Options.forEach((function(n){n.Binding.length>0&&n.Binding.forEach((function(n){eventBus.$emit("connect",{Guid:n,status:!1})}))})))}},methods:{checkBinding:function(n,t){t.Binding.length>0&&t.Binding.forEach((function(i){0===n.Answer.length?eventBus.$emit("connect",{Guid:i,status:!1}):n.Answer.forEach((function(n){n===t.Guid?eventBus.$emit("connect",{Guid:i,status:!0}):eventBus.$emit("connect",{Guid:i,status:!1})}))}))}},extends:s}),Vue.extend({props:{data:Object,index:Number,readOnly:Boolean},data:function(){return{display:!0}},watch:{display:function(){this.display||(this.data.Answer="")}},mounted:function(){var n=this;eventBus.$on("connect",(function(t){t.Guid===n.data.Guid&&(n.display=t.status)}))}}));Vue.component("dropdown",{template:'\n    <div class="r-question" v-if="display">\n      <div>\n        <div>\n          <p class="question-title">{{ data.Title }}</p>\n          <small v-if="data.Required">*</small>\n        </div>\n\n        <v-select\n          class="r-v-select"\n          v-model="data.Answer"\n          :options="options"\n          :reduce="title => title.code"\n          label="title"\n          :disabled="readOnly"\n        >\n        </v-select>\n      </div>\n    </div>\n  ',computed:{options:function(){var n=[];return this.data.Options.forEach((function(t){n.push({title:t.Value,code:t.Guid})})),n}},extends:o}),Vue.component("literal",{template:'\n    <div class="r-question" v-if="display">\n      <div>\n        <p class="question-title">{{ data.Title }}</p>\n        <small v-if="data.Required">*</small>\n      </div>\n      \n      <div>\n        <input class="r-input" type="text" v-model="data.Answer" :disabled="readOnly" placeholder="您的回答" />\n        <div class="bar"></div>\n      </div>\n    </div>\n  ',extends:o}),Vue.component("date",{template:'\n    <div class="r-question" v-if="display">\n      <div>\n        <p class="question-title">{{ data.Title }}</p>\n        <small v-if="data.Required">*</small>\n      </div>\n      \n      <div>\n        <date-picker v-model="data.Answer" valueType="format" :disabled="readOnly"></date-picker>\n      </div>\n    </div>\n  ',extends:o}),Vue.component("number",{template:'\n    <div class="r-question" v-if="display">\n      <div>\n        <p class="question-title">{{ data.Title }}</p>\n        <small v-if="data.Required">*</small>\n      </div>\n\n      <div>\n        <input class="r-input" type="text" v-model="data.Answer" @keyup="inputNumber" :disabled="readOnly" placeholder="您的回答" />\n        <div class="bar"></div>\n      </div>\n    </div>\n  ',methods:{inputNumber:function(n){n.target.value=n.target.value.replace(/[^\d]/g,"")}},extends:o}),Vue.component("email",{template:'\n    <div class="r-question" v-if="display">\n      <div>\n        <p class="question-title">{{ data.Title }}</p>\n        <small v-if="data.Required">*</small>\n      </div>\n      \n      <div>\n        <input class="r-input" type="text" v-model="data.Answer" :disabled="readOnly" placeholder="請輸入您的電郵" />\n        <div class="bar"></div>\n      </div>\n    </div>\n  ',extends:o}),Vue.component("english",{template:'\n    <div class="r-question" v-if="display">\n      <div>\n        <p class="question-title">{{ data.Title }}</p>\n        <small v-if="data.Required">*</small>\n      </div>\n\n      <div>\n        <input class="r-input" type="text" v-model="data.Answer" @keyup="inputEnglish" :disabled="readOnly" placeholder="請輸入英文字母" />\n        <div class="bar"></div>\n      </div>\n    </div>\n  ',methods:{inputEnglish:function(n){n.target.value=n.target.value.replace(/[^\a-\z\A-\Z]/g,"")}},extends:o}),Vue.component("RenderForm",{props:{showScore:{type:Boolean,default:!1},readOnly:{type:Boolean,default:!1},backUrl:{type:String,default:""}},data:function(){return{form:{},totalScore:0}},template:'\n    <div>\n      <div class="container">\n        <div class="back" @click="back">\n          <i class="fas fa-arrow-left"></i>\n          <p>返回</p>\n        </div>\n\n        <p class="total-score" v-if="totalScore !== 0">{{ totalScore }}</p>\n        \n        <div class="r-header">\n          <p class="no-data" v-if="JSON.stringify(form) === \'{}\'">No data.</p>\n\n          <div class="line"></div>\n          <p>{{ form.Title }}</p>\n          <small>{{ form.Description }}</small>\n        </div>\n\n        <component\n          v-for="(question, index) in form.Questions"\n          :key="question.Guid"\n          :data="question"\n          :index="index"\n          :is="question.Type"\n          :id="question.Guid"\n          :readOnly="readOnly"\n        ></component>\n      </div>\n    </div>\n  ',watch:{form:function(){var n=this;this.$nextTick((function(){n.form.Questions.forEach((function(n){"checkbox"!==n.Type?n.Options.forEach((function(t){n.Answer===t.Guid?t.Binding.forEach((function(n){eventBus.$emit("connect",{Guid:n,status:!0})})):t.Binding.forEach((function(n){eventBus.$emit("connect",{Guid:n,status:!1})}))})):0===n.Answer.length?n.Options.forEach((function(n){n.Binding.forEach((function(n){eventBus.$emit("connect",{Guid:n,status:!1})}))})):n.Answer.forEach((function(t){n.Options.forEach((function(n){t!==n.Guid&&n.Binding.forEach((function(n){eventBus.$emit("connect",{Guid:n,status:!1})}))}))}))}))}))}},methods:{getFormJSON:function(){if(this.checkEmail()){if(this.checkRequired()){var n=JSON.parse(JSON.stringify(this.form));this.form.Questions.forEach((function(n){if("checkbox"!==n.Type)if(n.Answer.length>0){var t=[];t.push(n.Answer),n.Answer=t}else n.Answer=[]}));var t=JSON.stringify(this.form);return this.form=n,t}window.alert("必填欄位請務必填寫")}else window.alert("請輸入正確的電郵格式")},renderForm:function(n){n.Questions.forEach((function(n){"checkbox"!==n.Type&&(1===n.Answer.length?n.Answer=n.Answer[0]:n.Answer="")})),this.form=n,this.showScore&&this.form.ScoreEnable&&this.sScore()},checkRequired:function(){return!this.form.Questions.filter((function(n){return document.getElementById(n.Guid)})).some((function(n){return n.Required&&(!n.Answer||0===n.Answer.length)}))},checkEmail:function(){var n=this,t=!0;return this.form.Questions.filter((function(n){return"email"===n.Type})).forEach((function(i){i.Answer.length>0&&(n.validateEmail(i.Answer)||(t=!1))})),t},validateEmail:function(n){return/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(String(n).toLowerCase())},sScore:function(){var n=this;this.form.ScoreEnable?(this.totalScore=0,this.form.Questions.filter((function(n){return"radio"===n.Type||"checkbox"===n.Type||"dropdown"===n.Type})).forEach((function(t){"checkbox"===t.Type?t.Answer.forEach((function(i){t.Options.forEach((function(t){i===t.Guid&&(n.totalScore+=parseInt(t.Score))}))})):t.Options.forEach((function(i){t.Answer===i.Guid&&(n.totalScore+=parseInt(i.Score))}))}))):window.alert("該表單未開啟計分模式")},back:function(){""===this.backUrl?window.alert("未正確配置返回頁面"):window.location.href=this.backUrl}},mounted:function(){junForm={getFormJSON:this.getFormJSON,renderForm:this.renderForm}}});new Vue({el:"#jun-form",methods:{getGuid:function(){var n=function(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1).toUpperCase()};return"".concat(n()).concat(n(),"-").concat(n(),"-").concat(n(),"-").concat(n(),"-").concat(n()).concat(n()).concat(n())}}})}]);